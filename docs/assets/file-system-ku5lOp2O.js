import{e as l,c as s,M as d}from"./index-xR7Oa9Oq.js";l&&(s.parentNode.hidden=!1,s.addEventListener("change",async()=>{localStorage.setItem("overwrite-original-files",s.checked);const e=[];if(s.checked){for(const[t,{file:i}]of uuidToFile.entries())t===d||!i.handle||e.push(i);await f(e)}}));localStorage.getItem("overwrite-original-files")!=="true"?s.checked=!1:s.checked=!0;const f=async e=>{const t=e.map(i=>i.handle.requestPermission({mode:"readwrite"}));await Promise.all(t)},h=async(e,t,i=e.name,u)=>{const a=[],n=[];for await(const r of e.values()){const c=`${i}/${r.name}`;r.kind==="file"?n.push(r.getFile().then(o=>(o.directoryHandle=e,o.handle=r,Object.defineProperty(o,"webkitRelativePath",{configurable:!0,enumerable:!0,get:()=>c})))):r.kind==="directory"&&t&&a.push(h(r,t,c))}return[...(await Promise.all(a)).flat(),...await Promise.all(n)]};export{f as checkAndPossiblyAskForPermissions,h as readDirectory};
