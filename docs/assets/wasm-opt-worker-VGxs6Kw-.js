const m=async t=>{const{default:n}=await import("./wasm-opt-JshYTGbh.js"),e=await n({print:()=>{},printErr:a=>t.push(a)});return await e.ready,e};self.addEventListener("message",async t=>{const n=[],e=await m(n),{wasmFileBefore:a,uniqueId:r}=t.data;try{const s=await a.arrayBuffer();e.FS.writeFile(r,new Uint8Array(s));const o=[r,"-o",r,"-Os","--enable-reference-types","--enable-multimemory","--converge"],i=[a.name,"-o",a.name,"-Os","--enable-reference-types","--enable-multimemory","--converge"];if(console.log(`Running wasm-opt ${i.join(" ")}`),e.callMain(o),n.length>0)throw new Error(n.join(". "));const l=e.FS.readFile(r,{encoding:"binary"});e.FS.unlink(r);const c=new File([l],a.name,{type:"application/wasm"});self.postMessage({wasmFileAfter:c})}catch(s){self.postMessage({error:s.message})}});
